# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

## Overrides for generated resource names
# See templates/_helpers.tpl
# nameOverride:
# fullnameOverride:

master:
  name: jenkins-master
  image: "jenkins/jenkins"
  imageTag: "2.190.1"
  imagePullPolicy: "Always"
  component: "jenkins-master"
  useSecurity: true
  adminUser: admin
  # AdminPassword: <defaults to random>
  cpu: "200m"
  memory: "256Mi"
  servicePort: 8080
  # For minikube, set this to NodePort, elsewhere use LoadBalancer
  # <to set explicitly, choose port between 30000-32767>
  serviceType: NodePort
  nodePort: 32000
  serviceAnnotations: {}
  containerPort: 8080
  # Enable Kubernetes Liveness and Readiness Probes
  healthProbes: true
  healthProbesTimeout: 60
  slaveListenerPort: 50000
  loadBalancerSourceRanges:
    - 0.0.0.0/0
  # List of plugins to be install during Jenkins master start
  installPlugins:
    - kubernetes:1.12.4
    - workflow-aggregator:2.5
    - workflow-job:2.24
    - credentials-binding:1.16
    - git:3.9.1
    - greenballs:1.15
  # Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  scriptApproval:
    - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
    - "new groovy.json.JsonSlurperClassic"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods leftShift java.util.Map java.util.Map"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods split java.lang.String"
  customConfigMap: false
  nodeSelector: {}
  tolerations: {}

agent:
  enabled: true
  image: jenkins/jnlp-slave
  imageTag: 4.3-4
  component: "jenkins-slave"
  privileged: false
  cpu: "200m"
  memory: "256Mi"
  # You may want to change this to true while testing a new image
  alwaysPullImage: false
  # You can define the volumes that you want to mount for this container
  # Allowed types are: ConfigMap, EmptyDir, HostPath, Nfs, Pod, Secret
  volumes:
    - type: HostPath
      hostPath: /var/run/docker.sock
      mountPath: /var/run/docker.sock
  nodeSelector: {}

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # ExistingClaim:
  ## jenkins data Persistent Volume Storage Class
  storageClass: jenkins-pv

  annotations: {}
  accessMode: ReadWriteMany
  size: 20Gi
  volumes:
  #  - name: nothing
  #    emptyDir: {}
  mounts:
  #  - mountPath: /var/nothing
  #    name: nothing
  #    readOnly: true

networkPolicy:
  # Enable creation of NetworkPolicy resources.
  enabled: false
  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
  # For Kubernetes v1.7, use 'networking.k8s.io/v1'
  apiVersion: networking.k8s.io/v1


## Install Default RBAC roles and bindings
rbac:
  create: true
  serviceAccountname: default
  # RBAC api version (currently either v1beta1 or v1alpha1)
  apiVersion: v1beta1
 
